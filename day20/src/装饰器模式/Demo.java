package 装饰器模式;

/**
 * @author chenjie
 * @date 2021/5/26-8:51
 */
public class Demo {
    /*
    * 装饰器模式
    *       不想增加很多子类的情况下扩展类
    *
    *       将具体功能职责划分，同时继承装饰者模式
    *
    * 优点:
    *   装饰类和被装饰类可以独立发展，不会相互耦合，装饰模式是一个继承的替代模式，装饰模式可以动态扩展一个实现类的功能
    * 缺点：
    *   多层装饰比较复杂
    *
    *   扩展一个类的功能，动态增加功能，动态撤销
    * */
    /*
    *   接口
    *   接口的多个实现类
    *   继承接口的装饰类  （抽象类）
    *   装饰类的实现类 ： 实现类里面传入 接口的实现对象，就可以调用这个实现类的功能，并在这些功能上进行扩展
    * */
}
